Python - Class Exercise and Activities 2022-08-08

Carl Tang Yong Han


_______________________
# Formatted print

planet = "Mars"

residents = "Martians"

print(f"Hello {planet}, you are lovely {residents}!")

_______________________
# Task the user to enter a number over 100 and and then enter a number
# under 10 and tell them how many times the smaller numbe goes into the
# larger number in a user-friendly format.


print("This game takes two numbers from you.")

firstNum = 1
secondNum = 100

while (firstNum < 100):
    firstNum = int(input("Enter a number over 100."))
    
    while (secondNum >= 10):
        secondNum = int(input("Now enter a number under 10."))

times = firstNum / secondNum
timesInt = firstNum // secondNum
print(f"Your second number goes into second number {times} times.")
print(f"Or, in whole numbers, {timesInt} times.")
      
_______________________
# Ask the user to enter 1, 2 or 3. If they enter a 1, display the message “Thank you”,
# if they enter a 2, display “Well done”, if they enter a 3, display “Correct”.
# If they enter anything else, display “Error message”.


userInput = input("Please enter either 1, 2 or 3. ")

if userInput == "1":
    print("Thank you.")
elif userInput == "2":
    print("Well done.")
elif userInput == "3":
    print("Correct.")
else:
    print("Error message.")

_______________________




#### Activities: Python Syntax

### Activity 1
Each of the code blocks below includes at least one error that will prevent it from running.
Fix the errors and test to make sure the code runs as expected.
Comments at the top of each block will tell you what the code should do.

_______________
Question:
# display the text in quotation marks to an output block
Print("Python is fun!")

Answer:
print("Python is fun!")

_______________
Question:
# Display the text in quotation marks to an output block 
# without moving any of the existing code to a different line
print("Python is fun!") print("Python is also easy.")

Answer:
print("Python is fun!\nPython is also easy.")
_______________
Question:
# Display the text in quotation marks to an output block 
# without moving any of the existing code to a different line
print 
("Python is fun!")

Answer:
print 
("Python is fun!")
## Note: the above code actually works to print text.
_______________
Question:
# Change each variable name to an appropriate name for Python. 
# Do not use the same variable name more than one time.
1-name = "Rebecca" # first name
&_name = "Roberts" # last name
 
# After changing the variable names, update the code below 
# to print out each name.
print(1-name)
print(&_name)

Answer:
firstName = "Rebecca" # first name
lastName = "Roberts" # last name

print(firstName)
print(lastName)
_______________




### Activity 2:
Starting with the code blocks provided below, add to the code as needed to follow
the instructions in the comments. You may add necessary code, but you should not delete
any of the existing code. Run each block to make sure it works as expected before going to the next block.
_______________
Question:
# Add a new line of code that displays the text in quotation marks 
# to an output block without repeating the text in quotation marks.
output = "I love Python!"
 
# your code below this line
print(f'"{output}"')
_______________
Question:
# Display only the text Python is fun! to an output block 
# without deleting any of the existing code
print("Python is fun!")
print("Python is also easy!")

Answer:
print("Python is fun!")
# print("Python is also easy!")
_______________




### Activity 3: Create a script that prompts the user for the name of the state
where they were born and the name of the state where they live now.
Save each value in its own variable and display the input values to the user.

_______________
# Answer:
stateBorn = input("Please enter the name of the state where you were born.")
stateLive = input("Please enter the name of the state where you live now.")

print(f"You were born in {stateBorn}, and you live in {stateLive} now.")
_______________




### Self-Assessment: Python Syntax

Requirements
Write a script that meets the following requirements:

Add your name and the current date in comments at the top of the script.
Prompt the user to enter their first name, their last name, their phone number, and the year they were born.
Save each of these values to a different variable.
Display the values they entered.
Test your script to make sure it works as expected.

### Self-Check
Use the checklist below to verify that your program meets requirements:

Your name and the current date appear at the top of the block of code.
The program includes four prompts, each of which is saved to a different variable with an appropriate name:
 - First name
 - Last name
 - Phone number
 - Year born
The program displays each of these values to the user.
There is an acceptable level of variation in setting up and designing the program's flow.
The key takeaway is that the program meets the requirements listed and runs without error.


### Answer:
______________________________________
## Carl Tang Yong Han
## 2022-08-08

# Telling user the expectations of this program, and prompt them for input.
print("Welcome. We are going to ask you for your personal information.")

firstName = input("Please enter your first name: ")
lastName = input("Please enter your last name: ")
phoneNumber = input("Please enter your phone number: ")
yearBorn = input("Please enter your year born: ")

print(f'Your first name is: {firstName}')
print(f'Your last name is: {lastName}')
print(f'Your phone number is: {phoneNumber}')
print(f'Your year born is: {yearBorn}')

______________________________________
### Outcome of test running program:

Welcome. We are going to ask you for your personal information.
Please enter your first name: Bruce
Please enter your last name: Wayne
Please enter your phone number: (888)-999 8888
Please enter your year born: 1969
Your first name is: Bruce
Your last name is: Wayne
Your phone number is: (888)-999 8888
Your year born is: 1969




#### Activities: Basic Python Data Types

### Activity 1
Create a computer program that performs the following steps:
 - Prompt the user for an integer and store the value in a variable.
 - Display the data type of the variable that holds the entered data.
 - Convert the value to an integer type and store the converted value in a new variable.
 - Display the value and type of the new variable in a single sentence. (For example, "The value is 8 with type integer.")
 - Run the program and enter a float value at the prompt. What is its value in the last step?
Refactor the program, using a float instead of an integer.
What happens if you enter an integer rather than a float at the prompt?


## Answer:
__________________________________
# Part 1:
userInput = input("Please enter an integer: ")
inputType = type(userInput)
print("The data type is of the input is: ", inputType)
# Converting value to integer and store as new variable
newVariable = int(userInput)
newType = type(newVariable)
print(f"The value is {newVariable} with type {newType}.")
__________________________________
## Output of test running 1:
Please enter an integer: 777
The data type is of the input is:  <class 'str'>
The value is 777 with type <class 'int'>.

## Output of test running 2:
Please enter an integer: 123.45
The data type is of the input is:  <class 'str'>
---------------------------------------------------------------------------
ValueError                                Traceback (most recent call last)
~\AppData\Local\Temp/ipykernel_10784/1327747348.py in <module>
      5 print("The data type is of the input is: ", inputType)
      6 # Converting value to integer and store as new variable
----> 7 newVariable = int(userInput)
      8 newType = type(newVariable)
      9 print(f"The value is {newVariable} with type {newType}.")

ValueError: invalid literal for int() with base 10: '123.45'

## Comment: The value in the last step is not available due to an error
## to invalidly cast a float value into an integer value.


__________________________________
# Part 2: Refactoring the program
userInput = input("Please enter a float number: ")
inputType = type(userInput)
print("The data type is of the input is: ", inputType)
# Converting value to float and store as new variable
newVariable = float(userInput)
newType = type(newVariable)
print(f"The value is {newVariable} with type {newType}.")

__________________________________
## Output of test running 1:
Please enter a float number: 34.567
The data type is of the input is:  <class 'str'>
The value is 34.567 with type <class 'float'>.

## Output of test running 2:
Please enter a float number: 89
The data type is of the input is:  <class 'str'>
The value is 89.0 with type <class 'float'>.

## Comment: There is no error message when user inputs integer in this case.
## However the value displayed is actually a float number of "89.0" instead of an integer,
## and the printed data type confirms that it is indeed converted into a float.
_________________________________




### Activity 2
Update the code below so that the result is equal to 576.
Do not change any of the existing values or operators or the order in which they appear.

## Question:
_________________________________
# do not change the order in which the numbers and operators appear in the next line
result = 5 + 3 ** 2 * 9 
 
print(result) # the output should be 576

## Answer:
__________________________________
result = (5 + 3) ** 2 * 9 
 
print(result) # the output should be 576
___________________________________




### Activity 3
Create a computer program that prompts the user for
a float number and returns the integer portion of the floating number.

## Answer:
___________________________________
userInput = input("Please enter a float number: ")

integerPortion = int(float(userInput))

print(f"The interger portion is: {integerPortion}")

___________________________________
## Output of test running:
Please enter a float number: 234.567
The interger portion is: 234
___________________________________




### Activity 4
Write a computer program that calculates and displays the current value of a deposit
for a given initial deposit, interest rate, how many times interest is calculated per year,
and the number of years since the initial deposit.

The program should prompt the user for each of the values and use the following formula
to calculate the current value of the deposit:

V = P(1 + r/n)^nt
where
V -- value
P -- initial deposit
r -- interest rate as a fraction (eg 0.05)
n -- the number of times per year interest is calculated
t -- the number of years since the initial deposit

The program should display each of the values entered to the user in a meaningful way
(so that the user can easily see what each value represents), along with the results of the calculation.

## Answer:
_________________________________
print("This program calculates the current value of a deposit.\n" \
      "Please provide the following four inputs.")

P = float(input("Please enter initial deposit, P: "))
r = float(input("Please enter interest rate (as a fraction), r: "))
n = int(input("Please enter how many times interest is calculated per year, n: "))
t = float(input("Please enter number of years since the initial deposit, t: "))

print(f"Your input:\n \
Initial deposit, P: {P} \n \
Interest rate (as a fraction), r: {r} \n \
Times per year interest is calculated, n: {n} \n \
Number of years since initial deposit, t: {t} \n")

# Calculate current value of deposit:
V = P * (1 + (r / n)) ** (n * t)

print(f"Current value of deposit: {V}")
________________________________
## Output of test running:
This program calculates the current value of a deposit.
Please provide the following four inputs.
Please enter initial deposit, P: 20000
Please enter interest rate (as a fraction), r: 0.04
Please enter how many times interest is calculated per year, n: 12
Please enter number of years since the initial deposit, t: 7
Your input:
 Initial deposit, P: 20000.0 
 Interest rate (as a fraction), r: 0.04 
 Times per year interest is calculated, n: 12 
 Number of years since initial deposit, t: 7.0 

Current value of deposit: 26450.277277712208
_______________________________




### Activity 5
Write a computer program that prompts the user for a principal amount,
the rate of interest, and the number of days for a loan and then calculates
and returns the simple interest for the life of the loan. Use the formula:

interest = principal * rate * days / 365

## Answer:
_________________________________
print("This program calculates simple interest of a loan. \
Please enter the following three values:")

principal = float(input("Principal amount: "))
rate = float(input("Rate of Interest: "))
days = int(input("Number of days: "))

interest = principal * rate * days / 365

print(f"The interest is: {interest}")
________________________________
## Output of test running:
This program calculates simple interest of a loan. Please enter the following three values:
Principal amount: 40000
Rate of Interest: 0.07
Number of days: 60
The interest is: 460.27397260273983
________________________________




### Activity 6
Create a computer program that displays three statements that evaluate to True
and three statements that evaluate to False.

## Answer:
_________________________________
a = 1
b = 0

# These evaluate to True
print("a > b =", (a > b))
print("a != b =", (a != b))
print("a > b or (a != b) =", (a > b or a != b))

# These evaluate to False
print("a <= b =", (a <= b))
print("not(a >= (a + b)) =", (not(a >= (a + b))))
print("a <= b and (a >= (a + b)) =", (a <= b and a >= (a + b)))
_________________________________
## Output of test running:
a > b = True
a != b = True
a > b or (a != b) = True
a <= b = False
not(a >= (a + b)) = False
a <= b and (a >= (a + b)) = False
_________________________________




### Activity 7
Create a computer program that prompts the user for a number and calculates the following:
 - the boolean of the number entered
 - the binary equivalent of the number entered
 - the square root of the number entered
The program should display the following to the user:
 - The number the user entered, in a phrase like, "You selected value."
 - The boolean of the number, in a phrase like, "The boolean of your number is value."
 - The binary equivalent of the number, in a phrase like, "The binary equivalent of your number is value"
 - The square root of the number, in a phrase like, "The square root of your number is value," with the value rounded to three decimal places.


_______________
Question:


Answer:

_______________
Question:


Answer:

_______________
Question:


Answer:

_______________




______________________


_______________________


_______________________
